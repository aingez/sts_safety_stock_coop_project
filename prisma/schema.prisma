// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Schema visualizer : https://notiz.dev/blog/prisma-dbml-generator
// npm prisma generate

generator client {
  provider = "prisma-client-js"
}
// generator dbml {
//   provider = "prisma-dbml-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 1 : staff table
model staff {
  staff_id        Int   @id @unique
  name      String

  pack     pallet_status[]
}

// 2 : pallet status table
model pallet_status {
  pallet_id         String @id @unique
  row_location      Int
  column_location   Int
  is_packing        Boolean // true if packed, false if unpacked
  packer            staff @relation(fields: [packer_id], references: [staff_id])
  packer_id         Int

  current_stock_part current_stock_part[]
}

// 3 : current stock part table
model current_stock_part {
  serial            String @id @unique
  // FK
  // part_type         part_quantity @relation(fields: [type], references: [type])
  type              partType
  model             String
  pack_date         DateTime
  // FK
  pallet            pallet_status @relation(fields: [pallet_name], references: [pallet_id])
  pallet_name       String
}

// 4 : part quantity table
// model part_quantity {
//   type              partType @id
//   model             String
//   quantity          Int
//   current_stock_part current_stock_part[]
// }

// 5 : history table
model history {
  history_id                Int @id @default(autoincrement())
  type              partType
  model             String
  serial            String @unique
  pallet_name       String
  pack_date         DateTime
  packer_id         Int
  unpack_date       DateTime
  unpacker_id       Int
}

enum partType {
  Block
  Head
  Crankshaft
}
